<h1>入校登記</h1>
<template>
    <form>
        <div class="container mt-4">
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="col ml-2">姓名</label>
                    <input type="text" v-model="params.FullName" class="form-control" placeholder="姓名">
                </div>
                <div class="col-md-4">
                    <label>事由</label>
                    <select v-model="params.Purpose" class="form-control">
                        <option value="">無</option>
                        <option v-for="item in enums.purposes" :key="item.key" :value="item.key">{{ item.name }}</option>
                    </select>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3">
                    <input type="text" id="EntryTimeStart" class="form-control" placeholder="進場時間開始">
                </div>
                <div class="col-md-3">
                    <input type="text" id="EntryTimeEnd" class="form-control" placeholder="進場時間結束">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3">
                    <input type="text" id="ExitTimeStart" class="form-control" placeholder="出場時間開始">
                </div>
                <div class="col-md-3">
                    <input type="text" id="ExitTimeEnd" class="form-control" placeholder="出場時間結束">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3">
                    <button type="button" class="btn btn-info" @@click="searchLogs">搜索</button>
                </div>
            </div>
        </div>
        <!-- 表格 -->
        <table class="table-striped border">
            <thead>
                <tr>
                    <th>姓名</th>
                    <th>電話</th>
                    <th>人數</th>
                    <th>受訪人</th>
                    <th>事由</th>
                    <th>備註</th>
                    <th>換證號碼</th>
                    <th>入校時間</th>
                    <th>離校時間</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="log in entryLogs" :key="log.id">
                    <td>{{ log.fullName }}</td>
                    <td>{{ log.phoneNumber }}</td>
                    <td class="text-center">{{ log.numberOfPeople }}</td>
                    <td>{{ log.interviewee }}</td>
                    <td>{{ findPurpose(log.purpose) }}</td>
                    <td>{{ log.note }}</td>
                    <td>{{ log.replacementNumber }}</td>
                    <td>{{ formatDate(log.entryTime) }}</td>
                    <td>{{ formatDate(log.ExitTime) }}</td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </form>
</template>


@section scripts {
    <script>

        window.app = new Vue({
            el: '#app',
            data: {
                toast_msg: '',
                enums: {
                    purposes: [],
                },
                params: {
                    FullName: null,
                    Purpose: '',
                    EntryTimeStart: null,
                    EntryTimeEnd: null,
                    ExitTimeStart: null,
                    ExitTimeEnd: null,
                },
                datas: {
                    // 你的 data 對象
                },
                entryLogs: [], // 存放返回的 entryLogs
                searchTimeRange: '', // 搜索時間區間
                searchCategory: '' // 搜索類別
            },
            methods: {
                async fetchEnum() {
                    const res = await axios.get(`${window.appRoot.full}Api/Common/EnumList`);
                    this.enums = res.data;
                },
                async searchLogs() {
                    const params = this.params;
                    // 發送帶有搜索參數的 GET 請求到 API
                    const res = await axios.get(`${window.appRoot.full}Api/Entry/EntryLogList`, { params });
                    // 更新 entryLogs 數據

                    this.entryLogs = res.data;
                },
                formatDate(date) {
                    return moment(date).format('YYYY-MM-DD \r HH:mm:ss');
                },
                findPurpose(val) {
                    if (this.enums.purposes.length > 0 && val) {
                        const vv = this.enums.purposes.find(x => x.key == val);
                        if (vv) {
                            return vv.name;
                        }
                        return '無';
                    }
                },
            },
            async mounted() {
                // 初始化 entryLogs（如果需要）
                await this.fetchEnum();
                // 初始化 datepicker
                $('#EntryTimeStart').datepicker().on('changeDate', (e) => {
                    this.params.EntryTimeStart = e.target.value;
                });
                $('#EntryTimeEnd').datepicker().on('changeDate', (e) => {
                    this.params.EntryTimeEnd = e.target.value;
                });
                $('#ExitTimeStart').datepicker().on('changeDate', (e) => {
                    this.params.ExitTimeStart = e.target.value;
                });
                $('#ExitTimeEnd').datepicker().on('changeDate', (e) => {
                    this.params.ExitTimeEnd = e.target.value;
                });

                
                this.searchLogs();
            },
        });
    </script>
}
